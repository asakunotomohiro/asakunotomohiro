use v5.24;

my $asakuno = "朝来野智博";
my @asakuno = ("朝来野", "智博");

say "2から100までの素数を出力する。";
sub prime() {
	for my $ii ( 2..100 ) {
		# 商を求める演算子が無いため、小数点部分を切り落とすためにintにキャストする。
		my $hh = int($ii / 2);
		# 真偽値はないため、普通に文字列を使う。
		my $ff = 'True';
#		my $ff = 1;
		for my $jj ( 2..$hh ) {
#say $jj, ":", $ii, ":", $hh, ":", $ff, ":", $ii%$jj;
			if ( ($ii % $jj) == 0 ) {
#say $jj, ":", $ii, ":", $hh, ":", $ff, ":", $ii%$jj;
				# 真偽値がないため、0をFalseとして扱う。
				$ff = 0;
				# なぜPerlはbreakの文言を使わない？
				last;
			}
		}
#		if ($ff != 0) {
		if ($ff eq 'True') {
			# 私の思い込みで失敗したのだが、0を偽としたのだから0以外は真になると思ったのだがな・・・。
			print($ii . ",");
		}
	}

	return 0;
}

&prime();
say;
# 実行結果
#		2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,

say "-*" x 30 . "-";

say "以上。"
