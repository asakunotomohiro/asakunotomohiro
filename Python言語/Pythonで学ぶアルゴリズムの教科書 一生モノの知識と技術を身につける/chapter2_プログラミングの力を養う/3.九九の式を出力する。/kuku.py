# coding:utf-8
#   これを付けなければ、
#         File "Python言語/Pythonで学ぶアルゴリズムの教科書 一生モノの知識と技術を身につける/chapter2_プログラミングの力を養う/3.九九の式を出力する。/kuku.py", line 1
#       SyntaxError: Non-ASCII character '\xe3' in file Python言語/Pythonで学ぶアルゴリズムの教科書 ?? on line 1, but no encoding declared; see http://python.org/dev/peps/pep-0263/ for details
#   のエラーが発生する。

print("朝来野智博")


# 前情報(二重ループの利用方法)。
def twoLoop(word):
    for ii in range(1, 10):
        for jj in range(1, 10):
            # print("ii：", ii, "jj：", jj, "ii*jj：", ii*jj, word)
            print(ii, "x", jj, "=", ii*jj)
    return 0
# 出力結果：
#       (1, 'x', 1, '=', 1)
#       (1, 'x', 2, '=', 2)
#       (1, 'x', 3, '=', 3)
#       (1, 'x', 4, '=', 4)
#       (1, 'x', 5, '=', 5)
#       (1, 'x', 6, '=', 6)
#       (1, 'x', 7, '=', 7)
#       (1, 'x', 8, '=', 8)
#       (1, 'x', 9, '=', 9)
#       (2, 'x', 1, '=', 2)
#       (2, 'x', 2, '=', 4)
#       (2, 'x', 3, '=', 6)
#       (2, 'x', 4, '=', 8)
#       (2, 'x', 5, '=', 10)
#       (2, 'x', 6, '=', 12)
#       (2, 'x', 7, '=', 14)
#       (2, 'x', 8, '=', 16)
#       (2, 'x', 9, '=', 18)
#       (3, 'x', 1, '=', 3)
#       (3, 'x', 2, '=', 6)
#       (3, 'x', 3, '=', 9)
#       (3, 'x', 4, '=', 12)
#       (3, 'x', 5, '=', 15)
#       (3, 'x', 6, '=', 18)
#       (3, 'x', 7, '=', 21)
#       (3, 'x', 8, '=', 24)
#       (3, 'x', 9, '=', 27)
#       (4, 'x', 1, '=', 4)
#       (4, 'x', 2, '=', 8)
#       (4, 'x', 3, '=', 12)
#       (4, 'x', 4, '=', 16)
#       (4, 'x', 5, '=', 20)
#       (4, 'x', 6, '=', 24)
#       (4, 'x', 7, '=', 28)
#       (4, 'x', 8, '=', 32)
#       (4, 'x', 9, '=', 36)
#       (5, 'x', 1, '=', 5)
#       (5, 'x', 2, '=', 10)
#       (5, 'x', 3, '=', 15)
#       (5, 'x', 4, '=', 20)
#       (5, 'x', 5, '=', 25)
#       (5, 'x', 6, '=', 30)
#       (5, 'x', 7, '=', 35)
#       (5, 'x', 8, '=', 40)
#       (5, 'x', 9, '=', 45)
#       (6, 'x', 1, '=', 6)
#       (6, 'x', 2, '=', 12)
#       (6, 'x', 3, '=', 18)
#       (6, 'x', 4, '=', 24)
#       (6, 'x', 5, '=', 30)
#       (6, 'x', 6, '=', 36)
#       (6, 'x', 7, '=', 42)
#       (6, 'x', 8, '=', 48)
#       (6, 'x', 9, '=', 54)
#       (7, 'x', 1, '=', 7)
#       (7, 'x', 2, '=', 14)
#       (7, 'x', 3, '=', 21)
#       (7, 'x', 4, '=', 28)
#       (7, 'x', 5, '=', 35)
#       (7, 'x', 6, '=', 42)
#       (7, 'x', 7, '=', 49)
#       (7, 'x', 8, '=', 56)
#       (7, 'x', 9, '=', 63)
#       (8, 'x', 1, '=', 8)
#       (8, 'x', 2, '=', 16)
#       (8, 'x', 3, '=', 24)
#       (8, 'x', 4, '=', 32)
#       (8, 'x', 5, '=', 40)
#       (8, 'x', 6, '=', 48)
#       (8, 'x', 7, '=', 56)
#       (8, 'x', 8, '=', 64)
#       (8, 'x', 9, '=', 72)
#       (9, 'x', 1, '=', 9)
#       (9, 'x', 2, '=', 18)
#       (9, 'x', 3, '=', 27)
#       (9, 'x', 4, '=', 36)
#       (9, 'x', 5, '=', 45)
#       (9, 'x', 6, '=', 54)
#       (9, 'x', 7, '=', 63)
#       (9, 'x', 8, '=', 72)
#       (9, 'x', 9, '=', 81)
# この括弧書きの出力結果は何？


rettwoloop = twoLoop("二重ループ")
print(rettwoloop)


#   作業1回目。
def kuku1():
    for ii in range(1, 10):
        kk = ""
        for jj in range(1, 10):
            kk = kk + "{}x{}={:2d} ".format(jj, ii, ii*jj)
        print(kk)
    return 0


kuku1()
# 出力結果：
#       1x1= 1 2x1= 2 3x1= 3 4x1= 4 5x1= 5 6x1= 6 7x1= 7 8x1= 8 9x1= 9 
#       1x2= 2 2x2= 4 3x2= 6 4x2= 8 5x2=10 6x2=12 7x2=14 8x2=16 9x2=18 
#       1x3= 3 2x3= 6 3x3= 9 4x3=12 5x3=15 6x3=18 7x3=21 8x3=24 9x3=27 
#       1x4= 4 2x4= 8 3x4=12 4x4=16 5x4=20 6x4=24 7x4=28 8x4=32 9x4=36 
#       1x5= 5 2x5=10 3x5=15 4x5=20 5x5=25 6x5=30 7x5=35 8x5=40 9x5=45 
#       1x6= 6 2x6=12 3x6=18 4x6=24 5x6=30 6x6=36 7x6=42 8x6=48 9x6=54 
#       1x7= 7 2x7=14 3x7=21 4x7=28 5x7=35 6x7=42 7x7=49 8x7=56 9x7=63 
#       1x8= 8 2x8=16 3x8=24 4x8=32 5x8=40 6x8=48 7x8=56 8x8=64 9x8=72 
#       1x9= 9 2x9=18 3x9=27 4x9=36 5x9=45 6x9=54 7x9=63 8x9=72 9x9=81 


print("-" * 30)


#   作業2回目。
def kuku2():
    for ii in range(1, 10):
        kk = ""
        for jj in range(1, 10):
            # kk = kk + "{}x{}={:2d} ".format(jj, ii, ii*jj)
            #   上記のkuku1()とは(jj, ii, 〜)の位置が逆になっている(それ以外は一緒)。
            kk = kk + "{}x{}={:2d} ".format(ii, jj, ii*jj)
        print(kk)
    return 0


kuku2()
#   出力結果：
#           1x1= 1 1x2= 2 1x3= 3 1x4= 4 1x5= 5 1x6= 6 1x7= 7 1x8= 8 1x9= 9 
#           2x1= 2 2x2= 4 2x3= 6 2x4= 8 2x5=10 2x6=12 2x7=14 2x8=16 2x9=18 
#           3x1= 3 3x2= 6 3x3= 9 3x4=12 3x5=15 3x6=18 3x7=21 3x8=24 3x9=27 
#           4x1= 4 4x2= 8 4x3=12 4x4=16 4x5=20 4x6=24 4x7=28 4x8=32 4x9=36 
#           5x1= 5 5x2=10 5x3=15 5x4=20 5x5=25 5x6=30 5x7=35 5x8=40 5x9=45 
#           6x1= 6 6x2=12 6x3=18 6x4=24 6x5=30 6x6=36 6x7=42 6x8=48 6x9=54 
#           7x1= 7 7x2=14 7x3=21 7x4=28 7x5=35 7x6=42 7x7=49 7x8=56 7x9=63 
#           8x1= 8 8x2=16 8x3=24 8x4=32 8x5=40 8x6=48 8x7=56 8x8=64 8x9=72 
#           9x1= 9 9x2=18 9x3=27 9x4=36 9x5=45 9x6=54 9x7=63 9x8=72 9x9=81 


print("-" * 30)


#   作業3回目。
def kuku():
    for ii in range(1, 10):
        kk = ""
        for jj in range(1, 10):
            # kuku.py|164 col 31 error| invalid syntax
            # print(ii * jj, " ", end='')
            #                     ↑のイコール部分がシンタックスエラーになる。
            # 以下、苦肉の策。
            kk = kk + "{:3d}".format(ii*jj)
        print(kk[2:])
    return 0


kuku()
#   出力結果：
#           1  2  3  4  5  6  7  8  9
#           2  4  6  8 10 12 14 16 18
#           3  6  9 12 15 18 21 24 27
#           4  8 12 16 20 24 28 32 36
#           5 10 15 20 25 30 35 40 45
#           6 12 18 24 30 36 42 48 54
#           7 14 21 28 35 42 49 56 63
#           8 16 24 32 40 48 56 64 72
#           9 18 27 36 45 54 63 72 81


print("以上。")
# vim:set ts=4 sts=4 sw=4 tw=0:expandtabs
